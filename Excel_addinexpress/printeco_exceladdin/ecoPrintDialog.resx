<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dialogPrintBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AGFFNNf/2Q==
</value>
  </data>
</root>